import Foundation
import Files

struct LocalizableFileCreatorForXML: FileCreatable {
    private let languageData: LanguageData
    private let outputPath: String
    
    init(languageData: LanguageData, outputPath: String) {
        self.languageData = languageData
        self.outputPath = outputPath
    }
    
    func write() throws {
        let cwd = FileManager.default.currentDirectoryPath
        let script = CommandLine.arguments[0];
        var path = ""
        if script.hasPrefix("/") {
            path = (script as NSString).deletingLastPathComponent
        } else {
            let urlCwd = URL(fileURLWithPath: cwd)
            if let _path = URL(string: script, relativeTo: urlCwd)?.path {
                path = (_path as NSString).deletingLastPathComponent
            }
        }
        let formatter = DateFormatter()
        formatter.dateFormat = "HH:mm E, d MMM y"
        var strings: String = "<!-- Autogenerated at " + formatter.string(from: Date()) + ". Do not modify -->\n\n"
        strings += """
                    <?xml version="1.0" encoding="utf-8"?>
                    <resources>\n
                    """
        for (index, key) in languageData.keys.enumerated() {
            strings += """
            <string name="\(key)">"\(languageData.values[index])"</string>\n
        """
        }
        strings += "</resources>"
        
        path += outputPath + "values-\(languageData.language)/"
        let folder = try Folder(path: path)
        let fileName = "strings.xml"
        let file = try folder.createFileIfNeeded(at: fileName)
        try file.write(strings)
    }
}

struct LocalizableFileCreatorForStrings: FileCreatable {
    private let languageData: LanguageData
    private let outputPath: String
    
    init(languageData: LanguageData, outputPath: String) {
        self.languageData = languageData
        self.outputPath = outputPath
    }
    
    func write() throws {
        let cwd = FileManager.default.currentDirectoryPath
        let script = CommandLine.arguments[0];
        var path = ""
        if script.hasPrefix("/") {
            path = (script as NSString).deletingLastPathComponent
        } else {
            let urlCwd = URL(fileURLWithPath: cwd)
            if let _path = URL(string: script, relativeTo: urlCwd)?.path {
                path = (_path as NSString).deletingLastPathComponent
            }
        }
        let formatter = DateFormatter()
        formatter.dateFormat = "HH:mm E, d MMM y"
        var output = "// Autogenerated at " + formatter.string(from: Date()) + ". Do not modify\n\n"
        for (index, key) in languageData.keys.enumerated() {
            output += "\"\(key)\" = \"\(languageData.values[index])\";\n"
        }
        
        path += outputPath + "\(languageData.language).lproj/"
        let folder = try Folder(path: path)
        let fileName = "Localizable.strings"
        let file = try folder.createFileIfNeeded(at: fileName)
        do {
            try file.write(output)
        } catch let error {
            fatalError("writing to file has been failed cause: \(error)")
        }
    }
    
}
